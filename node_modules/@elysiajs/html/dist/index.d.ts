/// <reference path="declaration.d.ts" />
/// <reference types="trusted-types" />
/// <reference types="bun-types" />
import { Elysia } from 'elysia';
import * as D from 'dompurify';
import './declaration';
export declare const html: () => Elysia<"", {
    store: {};
    error: {};
    request: {
        sanitize: {
            (source: any): string;
            (source: any, config: D.Config & {
                RETURN_TRUSTED_TYPE: true;
            }): TrustedHTML;
            (source: any, config: D.Config & {
                RETURN_DOM_FRAGMENT?: false | undefined;
                RETURN_DOM?: false | undefined;
            }): string;
            (source: any, config: D.Config & {
                RETURN_DOM_FRAGMENT: true;
            }): DocumentFragment;
            (source: any, config: D.Config & {
                RETURN_DOM: true;
            }): HTMLElement;
            (source: any, config: D.Config): any;
        };
        html(value: string): Response;
    };
    schema: {};
    meta: {
        schema: {};
        defs: {};
        exposed: {};
    };
}>;
export declare type Children = number | string | boolean | null | undefined | Children[];
export declare type PropsWithChildren<T = {}> = {
    children?: Children;
} & T;
export declare type Component<T = {}> = (this: void, props: PropsWithChildren<T>) => JSX.Element;
export declare const Fragment: Component<{}>;
export default html;
